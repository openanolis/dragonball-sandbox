on:
  pull_request:
  push:
    branches:
      - main


name: Check

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.arch }}-unknown-linux-gnu
          override: true
      - name: Lock dependencies
        run: |
          cargo update -p fuse-backend-rs:0.9.5 --precise 0.9.4 || true
          cargo update -p vmm-sys-util:0.10.0 --precise 0.9.0 || true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: check
          args: --all-features --target ${{ matrix.arch }}-unknown-linux-gnu

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          target: ${{ matrix.arch }}-unknown-linux-gnu
          override: true
      - name: Lock dependencies
        run: |
          cargo update -p fuse-backend-rs:0.9.5 --precise 0.9.4 || true
          cargo update -p vmm-sys-util:0.10.0 --precise 0.9.0 || true
      - uses: actions-rs/clippy-check@v1
        with:
          use-cross: true
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets --target ${{ matrix.arch }}-unknown-linux-gnu -- -D warnings
          name: Clippy Output

  deny:
    name: Deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}
        arguments: --all-features
